"""クイズ機能の追加

Revision ID: d113f7a5f42f
Revises: 0a2b23c2418c
Create Date: 2025-07-12 13:59:21.467538

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd113f7a5f42f'
down_revision: Union[str, None] = '0a2b23c2418c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quiz_types',
    sa.Column('quiz_type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('quiz_type_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('quizzes',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.String(length=300), nullable=False),
    sa.Column('quiz_type_id', sa.UUID(), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quiz_type_id'], ['quiz_types.quiz_type_id'], ),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_index(op.f('ix_quizzes_quiz_type_id'), 'quizzes', ['quiz_type_id'], unique=False)
    op.create_table('study_records',
    sa.Column('study_record_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('study_record_id')
    )
    op.create_index(op.f('ix_study_records_user_id'), 'study_records', ['user_id'], unique=False)
    op.create_table('daily_study_records',
    sa.Column('study_record_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('study_time', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['study_record_id'], ['study_records.study_record_id'], ),
    sa.ForeignKeyConstraint(['study_record_id'], ['study_records.study_record_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('study_record_id', 'date')
    )
    op.create_index(op.f('ix_daily_study_records_study_record_id'), 'daily_study_records', ['study_record_id'], unique=False)
    op.create_table('review_schedules',
    sa.Column('review_schedule_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('review_deadline', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('review_schedule_id')
    )
    op.create_index(op.f('ix_review_schedules_quiz_id'), 'review_schedules', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_review_schedules_user_id'), 'review_schedules', ['user_id'], unique=False)
    op.create_table('user_answers',
    sa.Column('user_answer_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('answer', sa.String(length=300), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('feedback', sa.String(length=500), nullable=True),
    sa.Column('model_answer', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_answer_id')
    )
    op.create_index(op.f('ix_user_answers_quiz_id'), 'user_answers', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_user_answers_user_id'), 'user_answers', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_answers_user_id'), table_name='user_answers')
    op.drop_index(op.f('ix_user_answers_quiz_id'), table_name='user_answers')
    op.drop_table('user_answers')
    op.drop_index(op.f('ix_review_schedules_user_id'), table_name='review_schedules')
    op.drop_index(op.f('ix_review_schedules_quiz_id'), table_name='review_schedules')
    op.drop_table('review_schedules')
    op.drop_index(op.f('ix_daily_study_records_study_record_id'), table_name='daily_study_records')
    op.drop_table('daily_study_records')
    op.drop_index(op.f('ix_study_records_user_id'), table_name='study_records')
    op.drop_table('study_records')
    op.drop_index(op.f('ix_quizzes_quiz_type_id'), table_name='quizzes')
    op.drop_table('quizzes')
    op.drop_table('quiz_types')
    # ### end Alembic commands ###
